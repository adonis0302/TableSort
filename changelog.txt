TableSorter Change Log

Version 2.1.8 (3/27/2012)
============================

* Modified blue &amp; green themes by lowering css specificity. The arrows weren't being applied to the header.
* Updated Sticky Header widget demo page to include a tablesorter theme switcher.

Version 2.1.7 (3/26/2012)
============================

* Changed default css options to use more unique names:
  * `cssHeader` is now `"tablesorter-header"`
  * `cssAsc` is now `"tablesorter-headerSortUp"`
  * `cssDesc` is now `"tablesorter-headerSortDown"`
  * Updated blue &amp; green styles to use the appropriate names.
  * Left the original css definitions to keep the styles backward compatible.
* Table header cell content wrapper modification:
  * Previously the content was wrapped with a `span`, now wrapped with a `div`
  * Content wrapping div now as the class name of `tablesorter-header-inner` applied to it.
* Various widget fixes:
  * The `$.tablesorter.storage` code now loads saved variables before updating. Fix for [issue #41](https://github.com/Mottie/tablesorter/issues/41).
  * Reverted the "filter" widget code to work like it is supposed to. Fix for [issue #40](https://github.com/Mottie/tablesorter/issues/40).
  * Modified the "stickHeaders" widget to now set the width of the content instead of the table cell. It seems to work better. Fix for [issue #37](https://github.com/Mottie/tablesorter/issues/37)
  * Fixed the "uitheme" widget code to update the sorting icon correctly.

Version 2.1.6 (3/22/2012)
============================

* Pager updates
  * Updated pager css. It wasn't targeting the pager block correctly.
  * Moved pager into the thead and/or tfoot in the <a href="example-pager-ajax.html">pager ajax demo</a>.
  * The pager plugin ajax method should now only target the header column text (not the pager) and first footer row when updating the header text.
* Sticky Header widget &amp table css updated:
  * Modified styles to add a border instead of using the row background; `border-spacing` css set to zero.
  * Sticky header right edge should now align with the table.
  * Removed top margin from IE so it will stick to the top of the browser window.
* Removed `setTimeout` functions. More details on why they were removed are [described here](http://wowmotty.blogspot.com/2011/06/jquery-tablesorter-missing-docs.html?showComment=1331768792441#c2353159245237432035).

Version 2.1.5 (3/20/2012)
============================

* The `isoDate` parser should now allow sorting of empty cells at the bottom. Fix for [issue #38](https://github.com/Mottie/tablesorter/issues/38).

Version 2.1.4 (3/18/2012)
============================

* Modified widget scripts to not cause errors when older versions of jQuery are loaded.
* Updated widget demos to include notes on minimum required jQuery verison.
* Added `$.tablesorter.version` function which returns the current version number.

Version 2.1.3.1 (3/17/2012)
============================

* Merged in bug fixes contributed by [Rozwell](https://github.com/rozwell). Thanks!
* Updated pager minified version, along with version numbers.

Version 2.1.3 (3/12/2012)
============================

* Added `usNumberFormat` option.
 * Set to `true` for U.S. number format: `1,234,567.89`
 * Set to `false` for German `1.234.567,89` or French `1 234 567,89` formats.'
 * Fix for [issue #34](https://github.com/Mottie/tablesorter/issues/34) and [issue # 31](https://github.com/Mottie/tablesorter/issues/31#issuecomment-4236945).
* Changed pager plugin ajax functions & demo
 * The `ajaxProcessing` function now must now return two or three pieces of information: [ total, rows, headers ]
 * `total` is the total number of rows in the database.
 * `rows` is an array of table rows with an array of table cells in each row.
 * `headers` is an array of header cell text (optional).

        ```javascript
        // process ajax so that the following information is returned:
        // [ total_rows (number), rows (array of arrays), headers (array; optional) ]
        // example:
        [
          // total # rows contained in the database 
          100,
          // row data: array of arrays; each internal array has the table data 
          [
            [ "row1cell1", "row1cell2", ... "row1cellN" ],
            [ "row2cell1", "row2cell2", ... "row2cellN" ],
             ...
            [ "rowNcell1", "rowNcell2", ... "rowNcellN" ]
          ],
          // header text (optional)
          [ "Header1", "Header2", ... "HeaderN" ]
        ]
        ```

 * Modified pager plugin ajax demo to hopefully make the data processing a bit more clear by changing `data` inside of the City#.json files to `rows`.
 * The demo json data should now render the unicode characters properly. Switched the files to the proper utf-8 encoding.
 * When no data is returned, the table will now:
     * Insert a row into the header showing the ajax error. If a row is inserted into the tbody, clicking on the header would cause a parser error.
     * Disable the pager so the pager counter won't show zero total rows.
     * Fix for issue dicussed within [issue #31](https://github.com/Mottie/tablesorter/issues/31#issuecomment-4390379).

Version 2.1.2 (3/11/2012)
============================

* Added `table` and `cellIndex` variables to the `textExtraction` function to allow using a more general function for text extraction.
* Empty cells will no longer skip the parser allowing extracting data attributes.
 * This was only an issue on table cells with no text.
 * Added a demo to the [demos wiki page](https://github.com/Mottie/tablesorter/wiki) whichs allows [dynamic sorting of checkboxes](http://jsfiddle.net/Mottie/vCTHw/18/).

Version 2.1.1 (3/8/2012)
============================

* Renamed `filter_fromStart` to `filter_startsWith`.
* Fixed an issue with `sortRestart` not working properly.
  * In turn, `sortReset`, `lockOrder` and `sortInitialOrder` were modified with this change and were made sure to all work properly.
  * The `sortInitialOrder` will work in either the main options or specifically within the headers option when a particular column needs a different initial sort order.
  * Added a [sortReset/sortRestart](http://mottie.github.com/tablesorter/docs/example-option-sortreset-sortrestart.html) demo.
  * Resolves [issue #30](https://github.com/Mottie/tablesorter/issues/29).
* Updated pager plugin to better work with the sticky header widget.

Version 2.1 (3/7/2012)
============================

* Added `selectorRemove` option
 * Any table row with this css class will be removed from the table prior to updating the table contents.
 * The reason this was added was in case a widget or some other script adds rows to the table for styling, or something else. If a table update is triggered (`$(table).trigger('update');`), all rows in the table will be included in the update.
 * The [writing custom widgets](http://mottie.github.com/tablesorter/docs/example-widgets.html) demo has been updated to include this class name.
 * The pager plugin update also uses this to remove the row added by the new `fixedHeight` option.
 * It's default value is `tr.remove-me`, so it can be modified to remove more than just rows.

* Fixed a bug that broke the plugin if you set `sorter: true` in the header options.

* Pager plugin update
  * Ajax
    * The pager plugin will now interact with a database via JSON. See [demo here](http://mottie.github.com/tablesorter/docs/example-pager-ajax.html).
    * Added `ajaxUrl` option which contains the variables `{page}` and `{size}` which will be replaced by the plugin to obtain that data.

        ```javascript
        ajaxUrl : "http:/mydatabase.com?page={page}&size={size}"
        ```

    * Another option named `ajaxProcessing` was included to process the data before returning it to the pager plugin. Basically the JSON needs to contain the data to match the example below. An additional required variable is the total number of records or rows needs to be returned.

        ```javascript
        // process ajax so that the data object is returned along with the total number of rows
        // example: { "data" : [{ "ID": 1, "Name": "Foo", "Last": "Bar" }], "total_rows" : 100 }
        ajaxProcessing: function(ajax){
          if (ajax && ajax.hasOwnProperty('data')) {
            // return [ "data", "total_rows" ];
            return [ ajax.data, ajax.total_rows ];
          }
        }
        ```

    * I tried to make the plugin interact with a database as flexible as possible, but I'm sure I haven't covered every situation. So any and all feedback is welcome!
    * Also, much thanks to [kachar](https://github.com/kachar) for the [enhancement request](https://github.com/Mottie/tablesorter/issues/31) and willingness to help test it!

  * Removed `positionFixed` and `offset` options.
  * Added `fixedHeight` option which replaces the `positionFixed` and `offset` options by maintaining the height of the table no matter how few rows are showing. During testing, it displayed some odd behaviour after adding or deleting rows, but it should have been fixed... just please keep an eye out ;).
  * The pager now adds all of its options to the table configuration options within an object named "pager". Basically what this means is that instead of add all of the pager options to be mixed in with the tablesorter options, the pager options have been isolated and can be found by typing this into the browser console: `$('table')[0].config.pager`.

* **Storage** function added named `$.tablesorter.storage` for use in widgets
 * It is used by various widgets to save data to either local storage (if available) or cookies.
 * This function needs to use `JSON.stringify()` which is [not supported by IE7](http://caniuse.com/#search=json). If you need to support IE7, then include this library: [JSON-js](https://github.com/douglascrockford/JSON-js).
 * Use the function with your own custom widgets as follows:

        ```javascript
        // *** Save data (JSON format only) ***
        // val must be valid JSON... use http://jsonlint.com/ to ensure it is valid
        var val = { "mywidget" : "data1" }; // valid JSON uses double quotes
        // $.tablesorter.storage(table, key, val);
        $.tablesorter.storage(table, 'tablesorter-mywidget', val);
    
        // *** Get data: $.tablesorter.storage(table, key); ***
        v = $.tablesorter.storage(table, 'tablesorter-mywidget');
        // val may be empty, so also check for your data
        val = (v && v.hasOwnProperty('mywidget')) ? v.mywidget : '';
        alert(val); // "data1" if saved, or "" if not
        ```

* Added an option named `widgetOptions`:
 * This is a move to store all widget specific options in one place so as not to polute the main table options.
 * All current widgets have been modified to use this new option.
 * Only one widget option, `widgetZebra` will be retained for backwards compatibility with the original plugin.
 * More details for each widget are explained below.

* **Zebra** widget:
 * Added `zebra` options to the new `widgetOptions`.

    ```javascript
    widgetOptions : {
      zebra : [ "even", "odd" ]
    }
    ```

 * This replaces `widgetZebra: { css: [ "even", "odd" ] }`, but if the `widgetZebra` option exists, it will over-ride this newer `widgetOptions.zebra` option in order to maintain backwards compatibility.

* **UI Theme** widget:
 * Changed css class of div wrapping the contents of each header cell from "inner" to "tablesorter-inner".
 * Added "ui-state-default" to the table head columns. Thanks to [Raigen](https://github.com/Raigen) for [sharing the code](https://github.com/Mottie/tablesorter/pull/33)!
 * Moved `widgetUitheme` option into the new `widgetOptions`.

    ```javascript
    widgetOptions : {
      // adding zebra striping, using content and default styles - the ui css removes the background from default
      // even and odd class names included for this demo to allow switching themes
      zebra   : ["ui-widget-content even", "ui-state-default odd"],

      // change default uitheme icons - find the full list of icons here: http://jqueryui.com/themeroller/ (hover over them for their name)
      // default icons: ["ui-icon-arrowthick-2-n-s", "ui-icon-arrowthick-1-s", "ui-icon-arrowthick-1-n"]
      // ["up/down arrow (cssHeaders/unsorted)", "down arrow (cssDesc/descending)", "up arrow (cssAsc/ascending)" ]
      uitheme : ["ui-icon-carat-2-n-s", "ui-icon-carat-1-s", "ui-icon-carat-1-n"]
    }
    ```

* **Filter** widget changes:
 * Added a new filter widget specific option `widgetOptions.filter_fromStart` which makes the filter only work from the first letter.
 * Added a `widgetOptions.filter_cssFilter` option which now contains the class name added to the filter row and each input within it. Previously the class name used was "filters" for the row and "filter" for the input, now both are "tablesorter-filter". Thanks to [cr125rider](https://github.com/cr125rider) for [sharing a code fix](https://github.com/Mottie/tablesorter/issues/32)!
 * Added css3 box sizing to allow a better fitting filter box. Thanks to [thezoggy](https://github.com/thezoggy) for sharing the code!
 * The css changes were also added to the blue, green and UI style sheets.
 * Updated the filter widget demo with the available options described above; this includes the `widgetOptions.filter_childRows` option which was previously undocumented, recently renamed.

* **Resizable Columns** Widget changes:
 * The resized column width is now saved using the `$.tablesorter.storage()` function (optional)
 * If the storage function doesn't exist, the widget will still function, but just not save the column width.

* **Save Sort** Widget changes:
 * Modified to now use the `$.tablesorter.storage()` function (required)
 * The storage function is required for this widget to work properly.
 * Previous saved data is not compatible with the changes made and will be ignored.

* Updated all docs demos to use jQuery 1.7+.

Version 2.0.31 (2012-2-27)
============================

* Added `sortRestart` option:
  * When `true`, this option resets the sort direction so that clicking on an unsorted column will now sort in the `sortInitialOrder` direction.
  * Clicking on a single column to cancel a multi-sorted table may not initially sort as expected.
  * Requested by severa in [issue #30](https://github.com/Mottie/tablesorter/issues/29). Thanks!
* Made some `sortReset` fixes:
  * Columns widget will now clear it's styling when the sort has reset.
  * Added a [demo](http://mottie.github.com/tablesorter/).
* Changed the filter widget inputs to be of a search type:
 * Currently only supported by webkit.
 * Requested by cr125rider in [issue #29](https://github.com/Mottie/tablesorter/issues/29). Thanks!
* Updated `sortLocaleCompare` documentation since it was explained incorrectly.
* Did some general code cleanup and some optimization.

Version 2.0.30.1 (2012-2-20)
============================

* Modified the "filter" widget to disable the input window instead of setting it with display none. Now the input is disabled and a "disabled" class is applied to allow for further styling.

Version 2.0.30 (2012-2-20)
============================

* Fixed the total mess I just made with the addWidget init functionality... I need a vacation :P

Version 2.0.29 (2012-2-20)
============================

* Fixed a problem with the addWidget init function which apparently was always being called, even if you didn't want it! Fix for [issue #28](https://github.com/Mottie/tablesorter/issues/28). Thanks to thezoggy for helping with troubleshooting!
* Minor cleanup of sorting class names code.

Version 2.0.28.1 (2012-2-16)
============================

* Modified the plugin pager to ignore child rows. Fix for [issue #27](https://github.com/Mottie/tablesorter/issues/27).

Version 2.0.28 (2012-2-1)
============================

* Added a new function to widgets called "init" which is called upon initialization, before any of the widgets are applied.
  * I added it to allow the "saveSort" widget to get the saved sort data (localStorage or cookie) before the initial sort was applied.
  * The "saveSort" widget is still compatible with the original tablesorter, but the original version will call all of the widgets twice on initialization, if using the "saveSort" widget.
  * New add widget format is as follows:

        ```javascript
        $.tablesorter.addWidget({
          id: 'myWidget',
          init: function(table, allWidgets, thisWidget){
            // widget initialization code - this is only run ONCE
            // but in this example I call the format function because
            // I want to keep it backwards compatible with the original tablesorter
            thisWidget.format(table, true);
          },
          format: function(table, initFlag) {
            // widget code to apply to the table AFTER EACH SORT
            // the initFlag is true when format is called for the first time, but
            // only if it is called from the init function
          }
        });
        ```

Version 2.0.27 (2012-1-31)
============================

* Added `sortReset` option
  * Setting this option to `true`, allows you to click on the header a third time to clear the sort
  * Clearing the sort DOES NOT return the table to it's initial unsorted state.
* Added `saveSort` widget
  * This widget will save the last sort to local storage, and will fallback to cookies.
  * The widget does use the `JSON.stringify` function which is [not fully supported](http://caniuse.com/#search=json) (IE7), so if you plan to support it and use this widget, please include this [JSON library](https://github.com/douglascrockford/JSON-js).
* Fixed pager page size not sticking. Fix for [issue #24](https://github.com/Mottie/tablesorter/issues/24).

Version 2.0.26 (2012-1-30)
============================

* Widgets should no longer be applied twice when an initial sort direction is added. Fix for [issue #21](https://github.com/Mottie/tablesorter/issues/21).
* Modified Green theme:
  * The Green theme sort direction icon is now applied to only the first span it encounters inside the header. The UI theme adds a second span for it's icon.
  * Essentially to fix [this demo](http://mottie.github.com/tablesorter/docs/example-widget-ui-theme.html) which allows switching between all of the themes.
* Modified the UI theme to now add a div that wraps all of the header cell content to allow positioning of the sort direction icon.

Version 2.0.25.2 (2012-1-27)
============================

* Changed Blue theme to vertically align arrows. Fix for [issue #12](https://github.com/Mottie/tablesorter/issues/12).
* Fixed sticky header widget so varing width columns now update when the pager plugin changes pages. Thanks to locationRoura for reporting this issue.

Version 2.0.25.1 (2011-12-15)
============================

* Fixed disabled column style for the ui theme widget. Thanks to [bbbco](https://github.com/bbbco) for the fix in [issue #17](https://github.com/Mottie/tablesorter/issues/17).


Version 2.0.25 (2011-12-14)
============================

* The ui theme and sticky header widgets now work together and update the arrow direction. Fix for [issue #15](https://github.com/Mottie/tablesorter/issues/15).
* Empty cells with only a tab or space will now sort at the bottom. Thanks to [pursual](https://github.com/pursual) for the fix for [issue #16](https://github.com/Mottie/tablesorter/issues/16).

Version 2.0.24 (2011-12-12)
============================

* Modified empty cell sorting to always sort at the bottom. Fix for [issue #14](https://github.com/Mottie/tablesorter/issues/14).
* Updated the sticky header widget to line up properly with the UI theme. Fix for [issue #13](https://github.com/Mottie/tablesorter/issues/13).

Version 2.0.23.5 (2011-12-6)
============================

* Updated the sticky header widget again to not interfere with the filter widget. Fix for [issue #10](https://github.com/Mottie/tablesorter/issues/10).

Version 2.0.23.4 (2011-12-6)
============================

* Updated the sticky header widget to reposition the sticky header when scrolling left. Fix for [issue #9](https://github.com/Mottie/tablesorter/issues/9).

Version 2.0.23.3 (2011-11-7)
============================

* Updated the filter widget:
  * Changed filter input from visibility hidden to display none. Fix/enhancement from [issue #7](https://github.com/Mottie/tablesorter/issues/7).
  * Modified the widget to better work with child rows. Added the `widgetFilterChildRows` option. Fix for [issue #8](https://github.com/Mottie/tablesorter/issues/8).
  * When `widgetFilterChildRows` is true, all child row content is included in the row filtering; if false, the child row content is ignored.
* Added `tableClass` to the documents. Apparently I forgot to add it before.
* Added a note to the filter demo bringing up [issue #6](https://github.com/Mottie/tablesorter/issues/6).
* Miscellaneous updates to the documents.

Version 2.0.23.2 (2011-10-28)
============================

* Fixed pager size & total pages not being retained after destroying, then restoring the pager. Thanks to crush123 for reporting the problem!

Version 2.0.23.1 (2011-10-26)
============================

* Fixed the pager plugin to prevent errors when initialized on an empty table. Fix for [issue #5](https://github.com/Mottie/tablesorter/issues/5).
* Added a Resizable Column widget
  * At this time, this widget allows resizing the column widths from the header.
  * The column widths are not saved, but if I did consider saving the widths to local storage. I just didn't get around to doing it.
  * [Demo page](http://mottie.github.com/tablesorter/docs/example-widget-resizable.html) added.
* Reorganized the next demo links, located at the bottom of every demo page, to match the order on the main document page.

Version 2.0.23 (2011-10-18)
============================

* Changed the `dateFormat` option:
 * The settings are now "mmddyyyy", "ddmmyyyy", and "yyyymmdd".
 * Changed the date separator to include any of the following: slash, dash, period, comma, space(s) or tab.
 * The date format parser will only work with a four digit year.
 * Added a [demo page](http://mottie.github.com/tablesorter/docs/example-option-date-format.html).

Version 2.0.22.1 (2011-10-15)
============================

* Updated the stickyHeaders widget
  * Sticky headers will now resize with the browser window
  * Updated blue and green themes to work better with sticky headers.
  * If using the uitheme widget, make sure the 'uitheme' widget is applied before (left of) the 'stickyHeaders' widget, as follows:

        widgets: ['zebra', 'uitheme', 'stickyHeaders']

Version 2.0.22 (2011-10-13)
============================

* Updated the pager plugin:
  * Fixed a problem that occurred when `removeRows` is set to false - fix for [issue #4](https://github.com/Mottie/tablesorter/issues/4).
  * Added "disable.pager" and "enable.pager" methods to the pager. These are useful if you want to delete a table row with the pager applied.

    // Delete a row
    // this function targets a button with a "remove" class name inside a table row
    // *************
    // Use delegate or live because `removeRows` is set to `true` in the demo - hidden rows don't exist
    $('table').delegate('button.remove', 'click' ,function(){
      var t = $('table');
      // disabling the pager will restore all table rows
      t.trigger('disable.pager');
      // remove the chosen row
      $(this).closest('tr').remove();
      // restore pager
      t.trigger('enable.pager');
    });

  * Fixed the `positionFixed` option (which positions the pager below the table) to now include the `offset` option value.
  * Fixed the pager arrow buttons so that destroying and enabling the pager multiple times doesn't multiply the number of pages changed.
  * Updated the pager demo page to allow deleting rows.
  * General cleanup and added lots of comments in the plugin and demo page on what each pager option does.
* Made one minor change to the tablesorter plugin to accomidate the pager plugin using the `removeRows` option.

Version 2.0.21.1 (2011-10-11)
============================

* Added "stickyHeader" widget to the "jquery.tablesorter.widgets.js" file.
  * This widget makes the header stick to the top of the page while scrolling down.
  * The sticky header is fully functional and will allow you to sort the table.
  * And best of all, it can be applied to the original tablesorter plugin.
  * Thanks to Chris Coyier and his post on [persistent headers](http://css-tricks.com/13465-persistent-headers/).
* Added a compressed widget file named "jquery.tablesorter.widgets.min.js".

Version 2.0.21 (2011-09-22)
============================

* Added `sortBegin` event
  * This event is triggered immediately before the actual sort. So this event occurs after the `sortStart` and after the `sortList` option has been updated.
  * It was added to allow for changing the sort dynamically. See [issue #3](https://github.com/Mottie/tablesorter/issues/3).
* Added `removeRows` option to the pager plugin
  * When `true`, the default value, the pager plugin removes all non-active rows from the table. This greatly increases the sort speed of large tables.
  * When `false`, the pager plugin merely hides the non-active rows so they all continue to exist in the table. This should allow for better access to data within the table (i.e. submitting form elements)

Version 2.0.20.1 (2011-09-16)
============================

* Oops fixed currency sorting

Version 2.0.20 (2011-09-16)
============================

* Filter Widget
  * Added "filter" to the "headers" option to allow disabling the filter option for a specific column - thanks jizo!
  * Added "filter-false" class, that when applied will disable the filter widget for that column.
  * Updated the headers docs and the filter widget demo.
* Updated the currency parser to use unicode characters to better work in different document formats.

Version 2.0.19 (2011-09-16)
============================

* Added code in attempt to clear the table headers between multiple tables - fix for [issue #2](https://github.com/Mottie/tablesorter/issues/2).
* Cleaned up some code and wrapped the widget code to prevent conflicts with other javascript libraries.
* Updated the columns widget:
  * Added css examples to the [demo](http://mottie.github.com/tablesorter/docs/example-widget-columns.html).
  * Removed the `widgetColumns` option from the core, but it is still used by the widget - the way it is used hasn't changed.
* Updated the uitheme widget:
  * Added `widgetUitheme` option - used by the widget, but not included in the core. See the demo for a better example.
  * Example added to the [uitheme widget demo](http://mottie.github.com/tablesorter/docs/example-widget-columns.html).

Version 2.0.18.1 (2011-09-14)
============================

* Updated the "uitheme" widget with method to add zebra striping and hovered header classes.

Version 2.0.18 (2011-09-13)
============================

* Fixed a bug in the column widget, it would cause an error if no initial sort was set.
* Fixed a bug where an error would occur if a widget doesn't exist.
* Updated pager widget to allow restoring the pager plugin & updated demo.
* Added column filter widget. It is designed so that each column has an filter.

Version 2.0.17 (2011-09-11)
============================

* Added a jquery.tablesorter.widget.js file:
  * It contains the "uitheme" widget, to add any jQuery UI theme, and the new "columns" widget, to style columns.
  * The blue and green themes have been updated with the added styles from the columns widget.
  * Added a Columns Widget demo and instructions.
* Added a `widgetColumns` option which defines the css classes added by the columns widget.
* Added notes to the pager plugin demo page to better specify when a change was added.
* The green theme header images have been modified to better work with variable width tables.

Version 2.0.16 (2011-09-08)
============================

* Added notes to demo pages to indicate if the original (version 2.0.5, at [tablesorter.com](http://tablesorter.com/docs/)) does have that option or method.
* Added "addRows" method that allows adding table rows.
  * This method differs from the "update" method in that it only adds rows to the cache.
  * Use this new method to add rows to a table with the pager plugin applied. Using the "update" method on a table with the pager plugin will remove all hidden rows from the cache.
* Added a "destroy.pager" method to remove the pager from the table - pager demo updated.

Version 2.0.15 (2011-08-23)
============================

* Fixed a problem that caused a javascript error when a table header cell doesn't have a class name.

Version 2.0.14 (2011-08-22)
============================

* Reverted the changes made in 2.0.13 and added checks to prevent errors.
* Allowed sorting an empty table which would then automatically sort its contents when the table is updated.
* Modified "Update" and "UpdateCell" methods to automatically resort the table using the existing sort.
* Updated the [Initializing tablesorter on an empty table](http://mottie.github.com/tablesorter/docs/example-empty-table.html) demo and [Updating a table cell](http://mottie.github.com/tablesorter/docs/example-update-cell.html).

Version 2.0.13 (2011-08-19)
============================

* Fixed a problem where a javascript error would occur when initializing a multi sort on an empty table. Thanks again to Eugene Ivakhiv!

Version 2.0.12 (2011-08-19)
============================

* Updated the `textExtraction` functionality
   * The original textExtraction function was only able to be applied to all the cells in the table.
   * Apparently the ability to define textExtraction on a per column basis was misinterpreted by me, so now I've added it.
   * Use the option as follows:

     $("table").tablesorter({
       textExtraction: {
         0: function(node) { return $(node).find(selector1).text(); },
         1: function(node) { return $(node).find(selector2).text(); },
         // etc
       }
     });

   * Updated the [Dealing with markup inside cells](http://mottie.github.com/tablesorter/docs/example-option-text-extraction.html) demo.
   * Thanks to Eugene Ivakhiv for reporting this issue to my attention in my blog.


Version 2.0.11 (2011-08-04)
============================

* Added the ability to set a column parser using a class name
   * When setting the parser, start the class name with "sorter-" followed by the parser name, e.g. "sorter-text" or "sorter-digit"
   * The column can be disabled by setting the class name to "sorter-false"
   * [Demo page](http://mottie.github.com/tablesorter/docs/example-parsers-class-name.html) included.
   * Custom parsers can also be used - see the updated [writing custom parsers demo](http://mottie.github.com/tablesorter/docs/example-parsers.html).

Version 2.0.10 (2011-07-31)
============================

* Modified the numeric sort with a new method to deal with non-numeric content:
   * When sorting columns with numeric values, by default any non-numeric or empty cells are treated as if they have a zero value. This puts the text between negative and positive values in a column.
   * Adding `string : "max+"` to the `headers` option will now treat any non-numeric table cells as if they have a maxiumum positive value (a value greater than the maximum positive value in the column).
   * Adding `string : "max-"` to the `headers` option will now treat any non-numeric table cells as if they have a maxiumum negative value (a value greater than the maximum negative value in the column).
   * See the "[Dealing with text strings in numeric sorts](http://mottie.github.com/tablesorter/docs/example-options-headers-digits-strings.html)" demo for a better visual example.
* Changed UI theme widget code to use "ui-widget-header" instead of "ui-widget-default" to better match the themes.
* Renamed changelog.markdown to changelog.txt to prevent downloading when clicking on the link

Version 2.0.9 (2011-07-27)
============================

* Added a jQuery UI theme and widget example. To apply the jQuery UI theme:
   * Include any jQuery UI theme on your page.
   * Add the base tablesorter ui theme (located in css/ui directory)
   * Add the jQuery UI theme widget code found on [this example page](http://mottie.github.com/tablesorter/docs/example-ui-theme.html). This demo page includes the UI theme switcher.
* Added a header index to the `onRenderHeader` function to make it easier to target specific header cells for modification. See the [render header example](http://mottie.github.com/tablesorter/docs/example-option-render-header.html) for an example.
* Pager plugin updates:
   * Removed the `separator` option and added an `output` option which allows you to completely customize the output string.
   * In the `output` string, include any of the following variables:
      * `{page}` is replaced with the current page number.
      * `{totalPages}` is replaced with the total number of pages.
      * `{startRow}` is replaced with the number of the visible start row of the pager.
      * `{endRow}` is replaced with the number of the visible end row of the pager.
      * `{totalRows}` is replaced with the total number of rows.
   * The `cssPageDisplay` option can now target any element; in previous versions, this element was an input of type text.
   * Added a `pagerArrows` and `cssDisabled` options:
      * When `pagerArrows` is true, the first and previous pager arrows have the css class name contained in the `cssDisabled` option applied when the first row is visible.
      * The next and last pager arrows will be have the `cssDisabled` class applied when the last row is visible.
      * Additionally, if the number of table rows is less than the pager size, the pager will get the `cssDisabled` class name applied.
      * If false (the default setting), the pager arrows class names will not change.
      * Please see the updated [pager demo](http://mottie.github.com/tablesorter/docs/example-pager.html) to see this working.

Version 2.0.8 (2011-07-21)
============================

* Fixed parsers for currency and digits to work with number values separated by commas. Thanks to Josh Renaud for the information!
* Fixed "lockedOrder" header option and added documentation and an example on how to use it.
* Made the sort order "desc" only trigger off of the first letter, so any word/abbreviation starting with "d" will set the descending sort order, all other letters will set the order to ascending (shhh, because I'm a bad speller :P)
* Modified the "sortInitialOrder" option so it can also be set in the headers option.

Version 2.0.7 (2011-07-17)
============================

* Added "pagerChange" and "pagerComplete" events to the pager plugin which trigger on the table. See the [pager demo](http://mottie.github.com/tablesorter/docs/example-pager.html) for an example on how to bind to them.
* Added the "sortAppend" since the option was there, but apparently the code wasn't.
* Added missing documentation from [my blog post](http://wowmotty.blogspot.com/2011/06/jquery-tablesorter-missing-docs.html)
 * This included a few new example pages: apply widgets, child rows, render header, sort append and zebra widget.
 * Added a methods and events table.
* Fixed the minified version. Apparently sorting functions called by the eval were removed by the Google Closure Compiler. Resolved by using "Whitespace only" optimization.
* Fixed syntax highlighting; updated Chili.

Version 2.0.6 (2011-06-22)
============================

* Forked original files and docs from [tablesorter.com](http://tablesorter.com) to GitHub.
* Replaced alphabetical sort with an alphanumeric sort
 * This "slower" sort can be disabled by setting the `sortLocaleCompare` option to `true`
 * The `sortLocaleCompare` option's default was changed to `false`.
 * Added a very basic demo.
* Added `tableClass` option
 * The value is "tablesorter" by default and should no longer be required in the default markup.
 * This class is applied to the table in the script and should match the css styling.
* Each header cell now has its content wrapped with a span.
 * This allows applying the direction icon to the span instead of the entire cell.
 * Although, this might just be extra markup with the advent of multiple background images and gradient backgrounds available in CSS3.
* Reformatted the code to make jSLint "happier".

Version 2.0.5b (?)
============================

* General
 * Added "cssChildRow" option - attach a child row to its parent.
 * Added "sortLocaleCompare" to use the native `String.localeCampare` method during text sort.
 * Added "onRenderHeader" function that is called when classes are added to the header cells.
 * Added "selectorHeaders" option to target the the header cells.
 * Changed multisort function

Version 2.0.3 (2008-03-17)
============================

* Bug fixes - Missing semicolon, broke the minified version.

Version 2.0.2 (2008-03-14)
============================

* General
 * Added support for the new metadata plugin.
 * Added support for jQuery 1.2.3.
 * Added support for decimal numbers and negative and positive digits.
 * Updated documenation and website with new examples.
 * Removed packed version.

* Bug fixes
 * Sort force (Thanks to David Lynch).

Version 2.0.1 (2007-09-17)
============================

* General
 * Removed the need for Dimensions plugin when using the pagnation plugin thanks to offset being included in the jQuery 1.2 core.
 * Added support for jQuery 1.2.
 * Added new Minified version of tablesorter.
 * Updated documenation and website with new examples.

* Bug fixes
 * If row values are identical the original order is kept (Thanks to David hull).
 * If thead includes a table $('tbody:first', table) breaks (Thanks to David Hull).

* Speed improvements:
 * appendToTable, setting innerHTML to "" before appending new content to table body.
 * zebra widget. (Thanks to James Dempster).
